---
const { headings = [] } = Astro.props;
---

<div>
  <h2 class="text-2xl font-bold mb-6 dark:text-white">Table of Contents</h2>

  <!-- Headings Section -->
  {headings && headings.length > 0 && (
    <div>
      <h3 class="text-xl mb-3 dark:text-gray-200">Headings</h3>
      <ul class="list-disc pl-5 mb-6 space-y-2">
        {headings.map((heading) => (
          <li>
            <a href={`#${heading.slug}`} class="hover:underline text-[0.8rem] dark:text-gray-300">
              {heading.text}
            </a>
          </li>
        ))}
      </ul>
    </div>
  )}

  <!-- URLs Section - This will be populated client-side -->
  <div id="url-section">
    <h3 class="text-xl mb-3 dark:text-gray-200">Links</h3>
    <ul class="list-disc pl-5 space-y-2" id="url-list">
      <li class="text-[0.8rem] dark:text-gray-300">Loading links...</li>
    </ul>
  </div>
</div>

<script>
  // Client-side script to extract URLs and update the table of contents
  document.addEventListener('DOMContentLoaded', () => {
    const links = document.querySelectorAll('.prose a');
    const urlList = document.getElementById('url-list');
    
    if (urlList) {
      // Clear existing list items
      urlList.innerHTML = '';
      
      // Add each link to the list
      if (links.length > 0) {
        links.forEach(link => {
          const li = document.createElement('li');
          li.className = 'text-[0.8rem] dark:text-gray-300';
          const a = document.createElement('a');
          a.href = link.href;
          a.textContent = link.textContent || link.href;
          a.className = 'hover:underline';
          li.appendChild(a);
          urlList.appendChild(li);
        });
      } else {
        // If no links were found
        const li = document.createElement('li');
        li.className = 'text-[0.8rem] dark:text-gray-300';
        li.textContent = 'No links found in content';
        urlList.appendChild(li);
      }
    }
  });
</script>
